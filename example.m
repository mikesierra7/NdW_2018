%% Minimalbeispiel% Berechnung der aequivalenten Wasserhoehe (EWH) durch die Aenderung des% Schwerefeldes zwischen zwei GRACE Monatsloesungen. %% In diesem Beispiel wird die EWH aus der Schwereaenderung ueber 15 Jahre% zwischen Mai 2002 und Mai 2017 fuer Groenland berechnet. Es wird die% ITSG-GRACE2016 Schwerefeldloesung benutzt. Ein Gauss Filter wird als% raeumliches Filter zur Reduktion der Streifen verwendet. %% siehe auch% Wahr, J. (2015): Time Variable Gravity Fields from Satellites. In: Herring, % T.A. (Ed.): Treatise on Geophysics, Vol 3, pp 193-213.%% Dieses Programmbeispiel enthaelt keine weiteren Korrektionen fuer weitere% Schwereeffekte, wie z. B. Postglaziale Landhebung (GIA), oder Leakage.% Der Zweck dieses Beispiels ist einzig die Demonstration von der% Berechnung von Schwerefeldgroessen aus den Kugelfunktionskoeffizienten% einer Schwerefeldloesung.%% Fuer Regionen ausserhalb Groenlands koennen die Variablen latlim [+N, -S]% und lonlim [-E, +W]. angepasst werden. Fuer andere Zeitraeume muessen die% Dateien file1 und file2 geaendert werden%% ITSG-GRACE2016 Referenze: % Mayer-Guerr, Torsten; Behzadpour, Saniya; Ellmer, Matthias; Kvas, Andreas; % Klinger, Beate; Zehentner, Norbert (2016): ITSG-Grace2016 - Monthly and Daily % Gravity Field Solutions from GRACE. GFZ Data Services. % http://doi.org/10.5880/icgem.2016.007clear alladdpath func% Mapping Toolbox nutzenmatlabmappingtoolbox=true; % true wenn Toolbox vorhanden%% Kugelfunktionskoeffizienten% Die Dateien koennen von http://ifg.tugraz.at/ITSG-Grace2016 geladen werden% In diesem Beispiel werden die unconstrained monthly solutions Bis Grad 120% verwendetfile1='data/ITSG-Grace2016_n120_2002-05.gfc';file2='data/ITSG-Grace2016_n120_2017-05.gfc';%% Koordinatengitter Groenland% Schrittweite im Gitterdelta_winkel=1;% Breite Limitslatlim=[58 85];la=latlim(1):delta_winkel:latlim(2);% theta: Ko-Breitetheta=90-la;% Laenge Limitslonlim=[-75 -12];lo=lonlim(1):delta_winkel:lonlim(2);% Gitter erzeugen[x,y]=meshgrid(theta,lo);%% Radius des Gauss Filtersgau=500; % in kilometers%% Koeffizienten einlesenfid=fopen(file1);[C1, S1, GM, R, n]=read_coeff(fid);fclose(fid);fid=fopen(file2);[C2, S2, GM, R, n]=read_coeff(fid);fclose(fid);%% Differenz der Koeffizienten % fuer die BerechnungdC=C2-C1;dS=S2-S1;%% Gauss Filter KoeffizientenGC=gauss_coeff(R,gau,n);%% Aequivalenten Wasserhoeherho_E=5540; % Durchschnittliche Dichte der Erde in kg/m^3rho_w=1000; % Dichte von Wasser in kg/m^3EWH=zeros(size(x));for h1=1:size(x,2) % Schleife ueber die Ko-Breite x  P=norm_legendre_functions(x(1,h1)*pi/180,n); % Abhaengig von der Ko-Breite  for h2=1:size(x,1)    EWH(h2,h1)=equiv_water_height(dC,dS,GC,P,n,y(h2,h1)*pi/180, rho_E,rho_w,R);  endend%% Plot% Beispiel aus dem Vortrag mit MATLAB mapping toolboxds1=datevec(regexp(file1,'20[0-9][0-9]-[0-9][0-9]','match'),'yyyy-mm');ds2=datevec(regexp(file2,'20[0-9][0-9]-[0-9][0-9]','match'),'yyyy-mm');if matlabmappingtoolbox  load coast                  % Kuestenlinien  worldmap([58 85],[-75 -12]);% Kartenprojektion der Region Groenland  surfm(la,lo,EWH);           % Ergebnisse darstellen  coast=geoshow(lat,long,'displaytype','line'); % Kuestenlinien einzeichnenelse  mesh(lo,la,EWH');endcb=colorbar;title(['Equivalent Water Height ' datestr(ds1,'mm/yyyy') ' - ' datestr(ds2,'mm/yyyy') ]);xlabel('Longitude');ylabel('Latitude');set(get(cb,'ylabel'),'string','EWH [m]');